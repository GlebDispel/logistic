version: '3.9'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: sla
      POSTGRES_USER: ${DATASOURCE_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    restart: always
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: ${DATASOURCE_CLICKHOUSE_USERNAME}
      CLICKHOUSE_PASSWORD: ${DATASOURCE_CLICKHOUSE_PASSWORD}
    ports:
      - "8123:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - my-network

  kafka-1:
    image: bitnami/kafka:latest
    container_name: kafka-1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=EhyZw3UtS0mD0rPZbhLvPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9090,EXTERNAL://kafka-1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_1_data:/bitnami/kafka
    networks:
      - my-network

  kafka-2:
    image: bitnami/kafka:latest
    container_name: kafka-2
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=EhyZw3UtS0mD0rPZbhLvPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9090,EXTERNAL://kafka-2:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka
    networks:
      - my-network

  kafka-3:
    image: bitnami/kafka:latest
    container_name: kafka-3
    ports:
      - "9096:9096"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=EhyZw3UtS0mD0rPZbhLvPw
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9090,EXTERNAL://kafka-3:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_3_data:/bitnami/kafka
    networks:
      - my-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: logistik
    depends_on:
      - postgres
      - clickhouse
      - kafka-1
    restart: always
    ports:
      - "8080:8080"
    environment:
      DATASOURCE_POSTGRES_URL: ${DATASOURCE_POSTGRES_URL}
      DATASOURCE_POSTGRES_USERNAME: ${DATASOURCE_POSTGRES_USERNAME}
      DATASOURCE_POSTGRES_PASSWORD: ${DATASOURCE_POSTGRES_PASSWORD}
      DATASOURCE_POSTGRES_DRIVER: ${DATASOURCE_POSTGRES_DRIVER}
      DATASOURCE_CLICKHOUSE_URL: ${DATASOURCE_CLICKHOUSE_URL}
      DATASOURCE_CLICKHOUSE_USERNAME: ${DATASOURCE_CLICKHOUSE_USERNAME}
      DATASOURCE_CLICKHOUSE_PASSWORD: ${DATASOURCE_CLICKHOUSE_PASSWORD}
      DATASOURCE_CLICKHOUSE_DRIVER: ${DATASOURCE_CLICKHOUSE_DRIVER}
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  clickhouse_data:
  postgres_data:
  kafka_1_data:
  kafka_2_data:
  kafka_3_data: